(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{189:function(e,r,t){"use strict";t.r(r);var _=t(0),i=Object(_.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("div",{staticClass:"content"},[e._m(0),e._v(" "),t("p",[t("a",{attrs:{href:"https://nodejs.org/api/process.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方文档"),t("OutboundLink")],1)]),e._v(" "),e._m(1),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/strapi/strapi",target:"_blank",rel:"noopener noreferrer"}},[e._v("Open source Node.js Headless CMS to easily build customisable APIs"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/Binaryify/NeteaseCloudMusicApi",target:"_blank",rel:"noopener noreferrer"}},[e._v("网易云音乐 Node.js API service"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/goldbergyoni/nodebestpractices?utm_source=gold_browser_extension",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Node.js best practices list (April 2021)"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://designer.mocky.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("The world easiest & fastest tool belts to mock your APIs|"),t("OutboundLink")],1)]),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.runoob.com/nodejs/nodejs-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("菜鸟教程"),t("OutboundLink")],1)]),e._v(" "),e._m(4),e._v(" "),t("p",[t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/Server-side/Express_Nodejs/Introduction#%E6%89%98%E7%AE%A1%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6",target:"_blank",rel:"noopener noreferrer"}},[e._v("Express"),t("OutboundLink")],1)]),e._v(" "),e._m(5)])}),[function(){var e=this.$createElement,r=this._self._c||e;return r("h1",{attrs:{id:"node"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#node"}},[this._v("#")]),this._v(" Node")])},function(){var e=this.$createElement,r=this._self._c||e;return r("h2",{attrs:{id:"开源-api-接口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#开源-api-接口"}},[this._v("#")]),this._v(" 开源 API 接口")])},function(){var e=this.$createElement,r=this._self._c||e;return r("p",[r("a",{attrs:{href:""}})])},function(){var e=this.$createElement,r=this._self._c||e;return r("h2",{attrs:{id:"概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[this._v("#")]),this._v(" 概念")])},function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ul",[t("li",[e._v("eventEmitter")]),e._v(" "),t("li",[e._v("buffer")]),e._v(" "),t("li",[e._v("stream\n"),t("ul",[t("li",[e._v("read")]),e._v(" "),t("li",[e._v("write")])])]),e._v(" "),t("li",[e._v("路由")]),e._v(" "),t("li",[e._v("URL 模块")]),e._v(" "),t("li",[e._v("querystring")]),e._v(" "),t("li",[e._v("全局变量\n"),t("ul",[t("li",[t("code",[e._v("__filename")])]),e._v(" "),t("li",[t("code",[e._v("__dirname")])]),e._v(" "),t("li",[t("code",[e._v("process")]),e._v(" "),t("ul",[t("li",[e._v("事件")]),e._v(" "),t("li",[e._v("属性\n"),t("ul",[t("li",[t("code",[e._v("argv")]),e._v(" 返回一个数组，由命令行执行脚本时的各个参数组成")]),e._v(" "),t("li",[t("code",[e._v("env")]),e._v(" 返回一个对象，成员为当前 shell 的环境变量")]),e._v(" "),t("li",[t("code",[e._v("pid")]),e._v("、"),t("code",[e._v("title")]),e._v("、"),t("code",[e._v("platform")])])])]),e._v(" "),t("li",[e._v("方法\n"),t("ul",[t("li",[t("code",[e._v("nextTick")])])])])])])])]),e._v(" "),t("li",[e._v("fs 模块\n"),t("ul",[t("li",[e._v("readfile")]),e._v(" "),t("li",[e._v("openfile")]),e._v(" "),t("li",[e._v("stat 文件信息")]),e._v(" "),t("li",[e._v("writeFile")]),e._v(" "),t("li",[e._v("close")]),e._v(" "),t("li",[e._v("ftruncate 截取文件")]),e._v(" "),t("li",[e._v("unlink 删除文件")]),e._v(" "),t("li",[e._v("mkdir 创建文件目录")]),e._v(" "),t("li",[e._v("readdir 读取目录")]),e._v(" "),t("li",[e._v("rmdir 删除目录")])])]),e._v(" "),t("li",[e._v("http 模块\n"),t("ul",[t("li",[e._v("createServer")]),e._v(" "),t("li",[e._v("request")]),e._v(" "),t("li",[e._v("response")])])]),e._v(" "),t("li",[e._v("path 模块\n"),t("ul",[t("li",[e._v("resolve 解析为绝对路径")]),e._v(" "),t("li",[e._v("relative 绝对路径转换为相对路径")])])]),e._v(" "),t("li",[e._v("多进程\n"),t("ul",[t("li",[e._v("child_process\n"),t("ul",[t("li",[e._v("child_process.exec 使用子进程执行命令")]),e._v(" "),t("li",[e._v("spawn - child_process.spawn 使用指定的命令行参数创建新进程")]),e._v(" "),t("li",[e._v("fork - child_process.fork 是 spawn()的特殊形式，用于在子进程中运行的模块")]),e._v(" "),t("li",[t("code",[e._v("const child_process = require('child_process')")]),e._v(";")])])])])])])},function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ul",[t("li",[e._v("中间件")]),e._v(" "),t("li",[e._v("路由,expess.Router();")]),e._v(" "),t("li",[e._v("express.static,托管静态文件")]),e._v(" "),t("li",[e._v("Express 应用对象还提供了为其它所有 HTTP 动词定义路由处理器的方法，大多数处理器的使用方式完全一致\n"),t("ul",[t("li",[e._v("get()")]),e._v(" "),t("li",[e._v("delete()")]),e._v(" "),t("li",[e._v("post()")]),e._v(" "),t("li",[e._v("header()")]),e._v(" "),t("li",[e._v("put()")]),e._v(" "),t("li",[e._v("...")])])]),e._v(" "),t("li",[e._v("错误处理,"),t("code",[e._v("(err, req, res, next)")])])])}],!1,null,null,null);r.default=i.exports}}]);