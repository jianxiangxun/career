(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{181:function(t,a,s){"use strict";s.r(a);var r=s(0),e=Object(r.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"算法-⭐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算法-⭐"}},[t._v("#")]),t._v(" 算法 ⭐")]),t._v(" "),s("p",[t._v("两个月时间")]),t._v(" "),s("h2",{attrs:{id:"排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[t._v("#")]),t._v(" 排序")]),t._v(" "),s("h2",{attrs:{id:"查找"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查找"}},[t._v("#")]),t._v(" 查找")]),t._v(" "),s("h2",{attrs:{id:"分治"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分治"}},[t._v("#")]),t._v(" 分治")]),t._v(" "),s("h2",{attrs:{id:"递归和循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#递归和循环"}},[t._v("#")]),t._v(" 递归和循环")]),t._v(" "),s("h2",{attrs:{id:"dfs-和-bfs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dfs-和-bfs"}},[t._v("#")]),t._v(" DFS 和 BFS")]),t._v(" "),s("h2",{attrs:{id:"动态规划"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态规划"}},[t._v("#")]),t._v(" 动态规划")]),t._v(" "),s("h2",{attrs:{id:"贪心算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#贪心算法"}},[t._v("#")]),t._v(" 贪心算法")]),t._v(" "),s("h2",{attrs:{id:"回溯算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回溯算法"}},[t._v("#")]),t._v(" 回溯算法")])])}],!1,null,null,null);a.default=e.exports}}]);